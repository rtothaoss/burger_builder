{"version":3,"sources":["components/Burger/BurgerIngredients/BurgerIngredient.module.css","components/UI/Spinner/Spinner.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/UI/Input/Input.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","assets/images/burger-logo.png","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","components/Layout/Layout.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","containers/Checkout/ContactData/ContactData.module.css","components/Order/Order.module.css","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","components/Layout/Layout.js","axios_orders.js","components/Burger/BurgerIngredients/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","components/UI/Spinner/Spinner.js","containers/withErrorHandling/withErrorHandling.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions/burgerBuilder.js","store/actions/actionTypes.js","store/actions/order.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","App.js","serviceWorker.js","store/reducers/burgerBuilder.js","store/reducers/order.js","index.js"],"names":["module","exports","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","spinner","sk-stretchdelay","rect2","rect3","rect4","rect5","SideDrawer","Open","Close","Logo","BuildControl","Label","Less","More","Input","InputElement","Invalid","Toolbar","DesktopOnly","NavigationItem","active","BuildControls","OrderButton","enable","Button","Success","Danger","__webpack_require__","p","NavigationItems","DrawerToggle","Backdrop","Content","Burger","Modal","CheckoutSummary","ContactData","Order","props","react_default","a","createElement","className","classes","style","height","src","burgerLogo","alt","react_router_dom","to","link","exact","activeClassName","children","NavigationItems_NavigationItem_NavigationItem","onClick","clicked","SideDrawer_DrawerToggle_DrawerToggle","drawerToggleClicked","components_Logo_Logo","Navigation_NavigationItems_NavigationItems","show","attachedClasses","open","react","UI_Backdrop_Backdrop","closed","join","Layout","state","showSideDrawer","sideDrawerClosedHandler","_this","setState","sideDrawerToggleHandler","prevState","Navigation_Toolbar_Toolbar","this","Navigation_SideDrawer_SideDrawer","Component","instance","axios","create","baseURL","BurgerIngredient","ingredient","type","withRouter","transformedIngredients","Object","keys","ingredients","map","igKey","toConsumableArray","Array","_","i","BurgerIngredients_BurgerIngredient","key","reduce","arr","el","concat","length","_ref","label","added","removed","disabled","controls","price","toFixed","control","BuildControls_BuildControl_BuildControl","ingredientAdded","ingredientRemoved","purchaseable","ordered","nextProps","nextState","console","log","modalClosed","transform","opacity","btnType","OrderSummary","ingredientSummary","textTransform","UI_Button_Button","purchaseCanceled","purchaseContinue","Spinner","rect1","withErrorHandling","WrappedComponent","_Component","_temp","_getPrototypeOf2","classCallCheck","_len","arguments","args","_key","possibleConstructorReturn","getPrototypeOf","call","apply","error","errorConfirmedHandler","inherits","createClass","value","_this2","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","UI_Modal_Modal","message","BurgerBuilder","purchasing","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","onInitPurchase","history","push","onInitIngredients","sum","disabledInfo","objectSpread","ings","orderSummary","burger","UI_Spinner_Spinner","components_Burger_Burger","Burger_BuildControls_BuildControls","onIngredientAdded","onIngredientRemoved","updatePurchaseState","Burger_OrderSummary_OrderSummary","connect","burgerBuilder","totalPrice","dispatch","ingName","ingredientName","get","then","data","catch","width","margin","checkoutCancelled","checkoutContinued","inputElement","inputClasses","invalid","shouldValidate","touched","elementType","assign","elementConfig","onChange","changed","options","option","displayValue","orderForm","name","placeholder","validation","required","valid","street","zipcode","minLength","maxLength","country","email","deliveryMethod","formIsValid","orderHandler","event","preventDefault","formData","formElementIdentifier","order","orderData","onOrderBurger","inputChangedHandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","checkValidity","rules","isValid","trim","formElementsArray","id","config","form","onSubmit","formElement","UI_Input_Input","loading","post","orderId","purchaseBurgerSuccess","err","actions","Checkout","checkoutCancelledHandler","goBack","checkoutContinuedHandler","replace","summary","react_router","purchasedRedirect","purchased","Order_CheckoutSummary_CheckoutSummary","path","match","component","amount","ingredientOutput","ig","display","border","padding","Orders","onFetchOrders","orders","components_Order_Order","fetchedOrders","App","components_Layout_Layout","Boolean","window","location","hostname","INITIAL_STATE","INGREDIENT_PRICES","salad","cheese","meat","bacon","reducer","undefined","action","defineProperty","newOrder","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","burgerBuilderReducer","orderReducer","store","createStore","applyMiddleware","thunk","app","es","src_App_0","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5022e092.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__1c-R6\",\"BreadTop\":\"BurgerIngredient_BreadTop__OByvs\",\"Seeds1\":\"BurgerIngredient_Seeds1__1y76b\",\"Seeds2\":\"BurgerIngredient_Seeds2__2AnGR\",\"Meat\":\"BurgerIngredient_Meat__gXm8p\",\"Cheese\":\"BurgerIngredient_Cheese__3rCPk\",\"Salad\":\"BurgerIngredient_Salad___lrdW\",\"Bacon\":\"BurgerIngredient_Bacon__1T8Sr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"Spinner_spinner__LTzVq\",\"sk-stretchdelay\":\"Spinner_sk-stretchdelay__2fOHR\",\"rect2\":\"Spinner_rect2__2JvqO\",\"rect3\":\"Spinner_rect3__1Uwyg\",\"rect4\":\"Spinner_rect4__1HFRP\",\"rect5\":\"Spinner_rect5__2nr5w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__3kXLK\",\"Open\":\"SideDrawer_Open__1tCv1\",\"Close\":\"SideDrawer_Close__9j7x-\",\"Logo\":\"SideDrawer_Logo__3voUv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__O8649\",\"Label\":\"BuildControl_Label__TQkTk\",\"Less\":\"BuildControl_Less__3Ttg8\",\"More\":\"BuildControl_More__1MY7B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3r5Ke\",\"Label\":\"Input_Label__1qyHr\",\"InputElement\":\"Input_InputElement__2m88K\",\"Invalid\":\"Input_Invalid__16Mis\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__ApScI\",\"Logo\":\"Toolbar_Logo__3Lk47\",\"DesktopOnly\":\"Toolbar_DesktopOnly__LuPaL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__2SpXc\",\"active\":\"NavigationItem_active__2v2td\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__1YmbS\",\"OrderButton\":\"BuildControls_OrderButton___M-Du\",\"enable\":\"BuildControls_enable__9xLsD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3gFiX\",\"Success\":\"Button_Success__2Rka1\",\"Danger\":\"Button_Danger__2ogZq\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__1N0xH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__1fnFX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__m405X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3j6VK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__2WLOk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__10T8F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1-5dN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__3PsXi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__20AK_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__3kYZJ\"};","import React from 'react'\nimport burgerLogo from '../../assets/images/burger-logo.png'\nimport classes from '../../components/Logo/Logo.module.css'\n\nconst Logo = (props) => (\n    <div className={classes.Logo} style={{height: props.height}}>\n        <img src={burgerLogo} alt='My Burger'/>\n    </div>\n)\n\nexport default Logo","import React from 'react'\nimport classes from './NavigationItem.module.css'\nimport { NavLink } from 'react-router-dom'\n\nconst NavigationItem = (props) => (\n    <li className={classes.NavigationItem}>\n        <NavLink \n            to={props.link}\n            exact\n            activeClassName={classes.active}\n        >\n            {props.children}\n        </NavLink>\n    </li>\n)\n\nexport default NavigationItem","import React from 'react'\nimport NavigationItem from '../NavigationItems/NavigationItem/NavigationItem'\nimport classes from './NavigationItems.module.css'\n\nconst NavigationItems = (props) => (\n    <ul className={classes.NavigationItems}>\n        <NavigationItem link='/'>Burger Builder</NavigationItem>\n        <NavigationItem link='/orders'>Orders</NavigationItem>\n    </ul>\n)\n\nexport default NavigationItems","import React from 'react'\nimport classes from './DrawerToggle.module.css'\n\nconst DrawerToggle = (props) => (\n    <div className={classes.DrawerToggle}onClick={props.clicked}>\n        <div></div>\n        <div></div>\n        <div></div>\n    </div>\n)\n\nexport default DrawerToggle","import React from 'react'\nimport classes from './Toolbar.module.css'\nimport Logo from '../../Logo/Logo'\nimport NavigationItems from '../NavigationItems/NavigationItems'\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle'\n\nconst Toolbar = (props) => (\n    <header className={classes.Toolbar}>\n        <DrawerToggle clicked={props.drawerToggleClicked}/>\n        <div className={classes.Logo}>\n            <Logo />\n        </div>\n        <nav className={classes.DesktopOnly}>\n            <NavigationItems />\n        </nav>\n    </header>\n)\n\n\n\nexport default Toolbar","import React from 'react'\nimport classes from './Backdrop.module.css'\n\nconst Backdrop = (props) => (\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\n)\n\nexport default Backdrop","import React, { Fragment } from 'react'\nimport Logo from '../../Logo/Logo'\nimport NavigationItems from '../NavigationItems/NavigationItems'\nimport Backdrop from '../../UI/Backdrop/Backdrop'\nimport classes from './SideDrawer.module.css'\n\nconst SideDrawer = (props) => {\n    let attachedClasses = [classes.SideDrawer, classes.Close]\n    if(props.open) {\n        attachedClasses = [classes.SideDrawer, classes.Open]\n    }\n\n    return (\n        <Fragment>\n            <Backdrop show={props.open} clicked={props.closed}/>\n            <div className={attachedClasses.join(' ')}>\n                <div className={classes.Logo}>\n                    <Logo />\n                </div>\n                <nav>\n                    <NavigationItems />\n                </nav>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default SideDrawer","import React, { Fragment, Component } from 'react'\nimport Toolbar from '../Navigation/Toolbar/Toolbar'\nimport SideDrawer from '../Navigation/SideDrawer/SideDrawer'\nimport classes from './Layout.module.css'\n\nclass Layout extends Component {\n    \n    state = {\n        showSideDrawer: false\n    }\n\n    sideDrawerClosedHandler = () => {\n        this.setState({showSideDrawer: false})\n    }\n\n    sideDrawerToggleHandler = () => {\n        this.setState((prevState) => {\n            return {showSideDrawer: !prevState.showSideDrawer}\n        })\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <Toolbar drawerToggleClicked={this.sideDrawerToggleHandler}/>\n                <SideDrawer open={this.state.showSideDrawer} closed={this.sideDrawerClosedHandler} />\n                <main className={classes.Content}>\n                    {this.props.children}\n                </main>\n            </Fragment>\n        )\n    }\n}\n\nexport default Layout","import axios from 'axios'\n\nconst instance = axios.create({\n    baseURL: 'https://react-my-burger-593d4.firebaseio.com/'\n})\n\nexport default instance","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport classes from './BurgerIngredient.module.css'\n\nclass BurgerIngredient extends Component {\nrender() {\n\n\n    let ingredient = null\n\n    switch (this.props.type) {\n\n        case ('bread-bottom'):\n            ingredient = <div className={classes.BreadBottom}></div>\n            break;\n\n        case ('bread-top'):\n            ingredient = (\n                <div className={classes.BreadTop}>\n                    <div className={classes.Seeds1}></div>\n                    <div className={classes.Seeds2}></div>\n                </div>\n            )\n            break;\n\n        case ('meat'):\n            ingredient = <div className={classes.Meat}></div>\n            break;\n\n        case ('cheese'):\n            ingredient = <div className={classes.Cheese}></div>\n            break;\n\n        case ('bacon'):\n            ingredient = <div className={classes.Bacon}></div>\n            break;\n\n        case ('salad'):\n            ingredient = <div className={classes.Salad}></div>\n            break;\n\n        default:\n            ingredient = null;\n\n    }\n\n    return ingredient\n}\n}\n\nBurgerIngredient.propTypes = {\n    type: PropTypes.string.isRequired\n}\n\nexport default BurgerIngredient","import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport BurgerIngredient from './BurgerIngredients/BurgerIngredient'\nimport classes from './Burger.module.css'\n\nconst Burger = (props) => {\n\n    let transformedIngredients = Object.keys(props.ingredients)\n    .map(igKey => {\n        return [...Array(props.ingredients[igKey])].map((_, i) => {\n            return <BurgerIngredient key={igKey + i} type={igKey} />\n        }) \n    }).reduce((arr, el) => {\n        return arr.concat(el)\n    }, [])\n\n    if(transformedIngredients.length === 0) {\n        transformedIngredients = <p>Please start adding ingredients!</p>\n    }\n\n    // console.log(transformedIngredients)\n\n  return (\n    <div className={classes.Burger}>\n        <BurgerIngredient type=\"bread-top\" />\n        {transformedIngredients}\n        <BurgerIngredient type=\"bread-bottom\" />\n    </div>\n  )   \n}\n\nexport default withRouter(Burger)","import React from 'react'\nimport classes from './BuildControl.module.css'\n\nconst BuildControl = ({ label, added, removed, disabled }) => {\n    return (\n        <div className={classes.BuildControl}>\n            <div className={classes.Label}>{label}</div>\n            <button\n                className={classes.Less}\n                onClick={removed}\n                disabled={disabled}\n            >Less\n            </button>\n            <button\n                className={classes.More}\n                onClick={added}\n            >More\n            </button>\n        </div>\n    )\n}\n\nexport default BuildControl","import React from 'react'\nimport BuildControl from './BuildControl/BuildControl'\nimport classes from './BuildControls.module.css'\n\nconst controls = [\n    { label: 'Salad', type: 'salad' },\n    { label: 'Bacon', type: 'bacon' },\n    { label: 'Cheese', type: 'cheese' },\n    { label: 'Meat', type: 'meat' },\n]\n\nconst BuildControls = (props) => {\n    return (\n        <div className={classes.BuildControls}>\n            <p> Current Price: <strong>{props.price.toFixed(2)}</strong> </p>\n            {controls.map(control => {\n                return (\n                    <BuildControl\n                        key={control.label}\n                        label={control.label}\n                        added={() => props.ingredientAdded(control.type)}\n                        removed={() => props.ingredientRemoved(control.type)}\n                        disabled={props.disabled[control.type]}\n                    />\n                )\n            })}\n            <button\n                className={classes.OrderButton}\n                disabled={!props.purchaseable}\n                onClick={props.ordered}\n            >\n                ORDER NOW\n            </button>\n        </div>\n    )\n}\n\nexport default BuildControls","import React, { Fragment, Component } from 'react'\nimport Backdrop from '../Backdrop/Backdrop'\nimport classes from './Modal.module.css'\n\n\nclass Modal extends Component {\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children\n    }\n\n    componentDidMount () {\n        console.log('[Modal] Will Update')\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <Backdrop show={this.props.show} clicked={this.props.modalClosed} />\n                <div\n                    className={classes.Modal}\n                    style={{\n                        transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\n                        opacity: this.props.show ? '1' : '0'\n                    }}\n                >\n                    {this.props.children}\n                </div>\n            </Fragment>\n        )\n    }\n\n}\n\n\n\n\n\n\nexport default Modal","import React from 'react'\nimport classes from './Button.module.css'\n\nconst Button = (props) => (\n    <button\n        disabled={props.disabled}\n        className={[classes.Button, classes[props.btnType]].join(' ')}\n        onClick={props.clicked}\n\n    >\n\n    {props.children}\n    \n    </button>\n)\n\nexport default Button","import React, { Fragment, Component } from 'react'\nimport Button from '../../UI/Button/Button'\n\n\nclass OrderSummary extends Component {\n    //this could be a functional component instead of class\n\n    render() {\n        \n    const ingredientSummary = Object.keys(this.props.ingredients)//transforms object into keys\n        .map(igKey => {\n            return (\n            <li key={igKey}>\n            <span style={{textTransform: 'capitalize'}}>{igKey}:</span>{this.props.ingredients[igKey]}\n            </li> )\n        } )\n    return (\n        <Fragment>\n            <h3>Your Order</h3>\n            <p>A delicious burger with the following ingredients:</p>\n            <ul>\n                {ingredientSummary}\n            </ul>\n            <p><strong>Total Price: {this.props.price.toFixed(2)}</strong></p>\n            <p>Continue to Checkout?</p>\n            <Button btnType={'Danger'} clicked={this.props.purchaseCanceled}>CANCEL</Button>\n            <Button btnType={'Success'} clicked={this.props.purchaseContinue}>CONTINUE</Button>\n        </Fragment>\n    )\n}\n}\n\nexport default OrderSummary","import React from 'react'\nimport classes from './Spinner.module.css'\n\nconst Spinner = () => (\n<div className={classes.spinner}>\n  <div className={classes.rect1}></div>\n  <div className={classes.rect2}></div>\n  <div className={classes.rect3}></div>\n  <div className={classes.rect4}></div>\n  <div className={classes.rect5}></div>\n</div>\n)\n\nexport default Spinner","import React, { Fragment, Component } from 'react'\nimport Modal from '../../components/UI/Modal/Modal'\n\n\nconst withErrorHandling = ( WrappedComponent, axios ) => {\n    return class extends Component {\n\n        state = {\n            error: null\n        }\n\n        componentWillMount () {\n            this.reqInterceptor = axios.interceptors.request.use(req => {\n                this.setState({ error: null})\n                return req\n            })\n            this.resInterceptor = axios.interceptors.response.use(res => res, error => {\n                this.setState({ error: error })\n            })\n        }\n\n        componentWillUnmount () {\n            // console.log('Will Unmount', this.reqInterceptor, this.resInterceptor)\n            axios.interceptors.request.eject(this.reqInterceptor)\n            axios.interceptors.request.eject(this.resInterceptor)\n        }\n\n        errorConfirmedHandler = () => {\n            this.setState({error: null})\n        }\n\n        render() {\n            return (\n                <Fragment>\n                    <Modal \n                        show={this.state.error}\n                        modalClosed={this.errorConfirmedHandler}>\n                        {this.state.error ? this.state.error.message : null}\n                    </Modal>\n                    <WrappedComponent {...this.props} />\n                </Fragment>\n            )\n        }\n    }\n}\n\n\nexport default withErrorHandling","import React, { Component, Fragment } from 'react'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport Burger from '../../components/Burger/Burger'\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls'\nimport Modal from '../../components/UI/Modal/Modal'\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary'\nimport Spinner from '../../components/UI/Spinner/Spinner'\nimport withErrorHandling from '../../containers/withErrorHandling/withErrorHandling'\nimport axios from '../../axios_orders'\n\n\nclass BurgerBuilder extends Component {\n\n    state = {\n        purchasing: false,\n    }\n\n    componentDidMount() {\n        this.props.onInitIngredients()\n    }\n\n    updatePurchaseState(ingredients) {\n        const sum = Object.keys(ingredients).map(igKey => {\n            return ingredients[igKey]\n        })\n            .reduce((sum, el) => {\n                return sum + el\n            }, 0)\n        return sum > 0\n    }\n\n    purchaseHandler = () => {\n        this.setState({ purchasing: true })\n    }\n\n    purchaseCancelHandler = () => {\n        this.setState({ purchasing: false })\n    }\n\n    purchaseContinueHandler = () => {\n        this.props.onInitPurchase()\n        this.props.history.push('/checkout')\n    }\n\n    render() {\n\n        const disabledInfo = {\n            ...this.props.ings\n        }\n        for (let key in disabledInfo) {\n            disabledInfo[key] = disabledInfo[key] <= 0\n        }\n        let orderSummary = null;\n       \n        let burger = this.props.error ? <p>Ingredients cannot be loaded!</p> : <Spinner />\n\n        if(this.props.ings) {\n            burger = (\n                <Fragment>\n                    <Burger ingredients={this.props.ings} />\n                    <BuildControls\n                        ingredientAdded={this.props.onIngredientAdded}\n                        ingredientRemoved={this.props.onIngredientRemoved}\n                        disabled={disabledInfo}\n                        price={this.props.price}\n                        purchaseable={this.updatePurchaseState(this.props.ings)}\n                        ordered={this.purchaseHandler}\n                    />\n                </Fragment>\n            )\n            orderSummary = <OrderSummary\n            ingredients={this.props.ings}\n            purchaseCanceled={this.purchaseCancelHandler}\n            purchaseContinue={this.purchaseContinueHandler}\n            price={this.props.price} />\n        }\n\n\n\n        return (\n            <Fragment>\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\n                    {orderSummary}\n                </Modal>\n                    {burger}\n            </Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.burgerBuilder.ingredients,\n        price: state.burgerBuilder.totalPrice,\n        error: state.burgerBuilder.error\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onIngredientAdded: (ingName) => dispatch(actions.addIngredient(ingName)),\n        onIngredientRemoved: (ingName) => dispatch(actions.removeIngredient(ingName)),\n        onInitIngredients: () => dispatch(actions.initIngredients()),\n        onInitPurchase: () => dispatch(actions.purchaseInit())\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandling(BurgerBuilder, axios))","import * as actionTypes from './actionTypes'\nimport axios from '../../axios_orders'\n\nexport const addIngredient = (name) => {\n    return {\n        type: actionTypes.ADD_INGREDIENT,\n        ingredientName: name,\n    }\n}\nexport const removeIngredient = (name) => {\n    return {\n        type: actionTypes.REMOVE_INGREDIENT,\n        ingredientName: name,\n    }\n}\n\nexport const setIngredients = (ingredients) => {  //synchronous action creator\n    return {\n        type: actionTypes.SET_INGREDIENTS,\n        ingredients: ingredients\n    }\n}\n\nexport const fetchIngredientsFailed = () => {\n    return {\n        type: actionTypes.FETCH_INGREDIENTS_FAILED\n    }\n    }\n\nexport const initIngredients = () => {\n    return dispatch => {\n        axios.get('https://react-my-burger-593d4.firebaseio.com/ingredients.json')\n            .then(response => {\n                dispatch(setIngredients(response.data))\n            })\n            .catch(error => {\n                dispatch(fetchIngredientsFailed())\n            })\n}\n}","export const ADD_INGREDIENT = 'ADD_INGREDIENT'\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT'\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS'\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED'\n\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START'\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS'\nexport const PURCAHSE_BURGER_FAIL = 'PURCAHSE_BURGER_FAIL'\nexport const PURCHASE_INIT = 'PURCHASE_INIT'\n\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START'\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS'\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL'","import * as actionTypes from './actionTypes'\nimport axios from '../../axios_orders'\n\nexport const purchaseBurgerSuccess = (id, orderData) => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\n        orderId: id,\n        orderData: orderData\n    }\n}\n\nexport const purchaseBurgerFail = (error) => {\n    return {\n        type: actionTypes.PURCAHSE_BURGER_FAIL,\n        error: error\n    }\n}\n\nexport const purchaseBurgerStart = () => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_START\n    }\n}\n\nexport const purchaseBurger = (orderData) => {\n    return dispatch => {\n        dispatch(purchaseBurgerStart())\n        axios.post('/orders.json', orderData)\n        .then(response => {\n            console.log(response.data)\n           dispatch(purchaseBurgerSuccess(response.data.name, orderData))\n        })\n        .catch(err => {\n            dispatch(purchaseBurgerFail(err))\n        })\n    }\n}\n\nexport const purchaseInit = () => {\n    return {\n        type: actionTypes.PURCHASE_INIT\n    }\n}\n\nexport const fetchOrdersSuccess = (orders) => {\n    return {\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\n        orders: orders\n    }\n}\n\nexport const fetchOrdersFail = (error) => {\n    return {\n        type: actionTypes.FETCH_ORDERS_FAIL,\n        error: error\n    }\n}\n\nexport const fetchOrdersStart = () => {\n    return {\n        type: actionTypes.FETCH_ORDERS_START\n    }\n}\n\nexport const fetchOrders = () => {\n    return dispatch => {\n        dispatch(fetchOrdersStart())\n        axios.get('/orders.json')\n        .then(res => {\n            // console.log(res.data)\n            const fetchedOrders = []\n            for(let key in res.data) {\n                fetchedOrders.push({\n                    ...res.data[key],\n                    id: key\n                })\n            }\n            dispatch(fetchOrdersSuccess(fetchedOrders))\n        })\n        .catch(err => {\n            dispatch(fetchOrdersFail(err))\n        })\n    }\n}","import React from 'react'\nimport Burger from '../../Burger/Burger'\nimport Button from '../../UI/Button/Button'\nimport classes from './CheckoutSummary.module.css'\n\nconst CheckoutSummary = (props) => {\n    return (\n        <div className={classes.CheckoutSummary}>\n            <h1>We hope it tastes great!</h1>\n            <div style={{ width: '100%', margin: 'auto' }}>\n                <Burger ingredients={props.ingredients} />\n            </div>\n            <Button\n                btnType='Danger'\n                clicked={props.checkoutCancelled}\n            >CANCEL\n            </Button>\n\n            <Button\n                btnType='Success'\n                clicked={props.checkoutContinued}\n            >CONTINUE\n            </Button>\n        </div>\n    )\n}\n\nexport default CheckoutSummary","import React from 'react'\nimport classes from './Input.module.css'\n\nconst Input = (props) => {\n    let inputElement = null;\n    const inputClasses = [classes.InputElement]\n\n    if(props.invalid && props.shouldValidate && props.touched) {\n        inputClasses.push(classes.Invalid)\n    }\n\n    switch (props.elementType) {\n        case 'input':\n            inputElement = <input\n                className={inputClasses.join(' ')}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed}\n            />\n            break\n        case 'textarea':\n            inputElement = <textarea\n                className={inputClasses.join(' ')}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed}\n            />\n            break\n        case 'select':\n            inputElement = (\n                <select\n                    className={inputClasses.join(' ')}\n                    value={props.value}\n                    onChange={props.changed}>\n                    {props.elementConfig.options.map(option => (\n                        <option key={option.value} value={option.value}>{option.displayValue}</option>\n                    ))}\n\n                </select>)\n            break\n        default:\n            inputElement = <input\n                className={inputClasses.join(' ')}\n                {...props.elementConfig}\n                value={props.value} />\n    }\n\n    return (\n        <div className={classes.Input}>\n            <label className={classes.Label}>{props.label}</label>\n            {inputElement}\n        </div>\n    )\n}\n\nexport default Input","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Button from '../../..//components/UI/Button/Button'\nimport Spinner from '../../../components/UI/Spinner/Spinner'\nimport Input from '../../../components/UI/Input/Input'\nimport axios from '../../../axios_orders'\nimport classes from './ContactData.module.css'\nimport withErrorHandling from '../../withErrorHandling/withErrorHandling'\nimport * as actions from '../../../store/actions'\n\nclass ContactData extends Component {\n\n    state = {\n        orderForm: {\n            name: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your name'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                },\n                valid: false,\n                touched: false\n            },\n            street: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Street'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                },\n                valid: false,\n                touched: false\n            },\n            zipcode: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Zipcode'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    minLength: 5,\n                    maxLength: 5\n                },\n                valid: false,\n                touched: false\n            },\n            country: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Country'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                },\n                valid: false,\n                touched: false\n            },\n            email: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'email',\n                    placeholder: 'Your E-Mail'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                },\n                valid: false,\n                touched: false\n            },\n            deliveryMethod: {\n                elementType: 'select',\n                elementConfig: {\n                    options: [\n                        {value: 'fastest', displayValue: 'Fastest'},\n                        {value: 'cheapest', displayValue: 'Cheapest'},\n                ]\n                },\n                value: 'fastest',\n                validation: {},\n                valid: true\n            },\n        },\n        formIsValid: false\n    }\n\n    orderHandler = (event) => {\n            event.preventDefault();\n            const formData = {}\n            for(let formElementIdentifier in this.state.orderForm) {\n                formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value\n            }\n            const order = {\n                ingredients: this.props.ings,\n                price: this.props.price,\n                orderData: formData\n            }\n            this.props.onOrderBurger(order)\n        }\n\n    checkValidity(value, rules) {\n        let isValid = true\n        \n        if(rules.required) {\n            isValid = value.trim() !== '' && isValid\n        }\n\n        if(rules.minLength) {\n            isValid = value.length >= rules.minLength && isValid\n        }\n        if(rules.maxLength) {\n            isValid = value.length <= rules.maxLength && isValid\n        }\n\n        return isValid\n    }\n\n    inputChangedHandler = (event, inputIdentifier) => {\n        const updatedOrderForm = {\n            ...this.state.orderForm\n        }\n        const updatedFormElement = {\n            ...updatedOrderForm[inputIdentifier]\n        }\n        updatedFormElement.value = event.target.value\n        updatedFormElement.valid = this.checkValidity(updatedFormElement.value, updatedFormElement.validation)\n        updatedFormElement.touched = true;\n        updatedOrderForm[inputIdentifier] = updatedFormElement;\n\n        let formIsValid = true\n        for(let inputIdentifier in updatedOrderForm) {\n            formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid\n        }\n\n        this.setState({orderForm: updatedOrderForm, formIsValid: formIsValid})\n    }\n\n    render() {\n\n        const formElementsArray = []\n        for(let key in this.state.orderForm) {\n            formElementsArray.push({\n                id: key, \n                config: this.state.orderForm[key]\n            })\n        }\n\n\n            let form =\n                <form onSubmit={this.orderHandler}>\n                    {formElementsArray.map(formElement => (\n                        <Input \n                            key={formElement.id}\n                            elementType={formElement.config.elementType} \n                            elementConfig={formElement.config.elementConfig}\n                            value={formElement.config.value}\n                            invalid={!formElement.config.valid}\n                            shouldValidate={formElement.config.validation}\n                            touched={formElement.config.touched}\n                            changed={(event) => this.inputChangedHandler(event, formElement.id)}\n                        />\n                    ))}\n                    <Button btnType='Success' disabled={!this.state.formIsValid}>ORDER</Button>\n                </form>\n            if (this.props.loading) {\n                form = <Spinner />\n            }\n            return (\n                <div className={classes.ContactData}>\n                    <h4>Enter your Contact Data</h4>\n                    {form}\n                </div>\n            )\n        }\n    }\n\n    const mapStateToProps = state => {\n        return {\n            ings: state.burgerBuilder.ingredients,\n            price: state.burgerBuilder.totalPrice,\n            loading: state.order.loading\n        }\n    }\n\n    const mapDispatchToProps = dispatch => {\n        return {\n            onOrderBurger: (orderData) => dispatch(actions.purchaseBurger(orderData))\n        }\n    }\n\n    export default connect(mapStateToProps, mapDispatchToProps)(withErrorHandling(ContactData, axios))","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary'\nimport { Route } from 'react-router-dom'\nimport ContactData from './ContactData/ContactData'\nimport { Redirect } from 'react-router-dom'\n\n\nclass Checkout extends Component {\n\n\n    checkoutCancelledHandler = () => {\n        this.props.history.goBack()\n    }\n\n    checkoutContinuedHandler = () => {\n        this.props.history.replace('/checkout/contact-data')\n    }\n\n    render() {\n        let summary = <Redirect to='/' />\n        \n        if (this.props.ings) {\n            const purchasedRedirect = this.props.purchased ? <Redirect to='/'/> : null\n            summary = (\n                <div>\n                    {purchasedRedirect}\n                    <CheckoutSummary\n                        ingredients={this.props.ings}\n                        checkoutCancelled={this.checkoutCancelledHandler}\n                        checkoutContinued={this.checkoutContinuedHandler}\n                    />\n                    <Route path={this.props.match.path + '/contact-data'} component={ContactData} />\n                </div>\n            )\n        }\n        return summary\n\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.burgerBuilder.ingredients,\n        purchased: state.order.purchased\n    }\n}\n\n\nexport default connect(mapStateToProps)(Checkout)","import React from 'react'\nimport classes from './Order.module.css'\n\nconst Order = (props) => {\n\n    const ingredients = []\n\n    for(let ingredientName in props.ingredients) {\n        ingredients.push(\n            {   \n                name: ingredientName, \n                amount: props.ingredients[ingredientName]\n            })\n    }\n\n    const ingredientOutput = ingredients.map(ig => {\n        return <span \n            style={{textTransform: 'capitalize', display: 'inline-block', margin: '0 8px', border: '1px solid #ccc', padding: '5px'}}\n            key={ig.name}>{ig.name} ({ig.amount}) </span>\n    })\n\n    return(\n        <div className={classes.Order}>\n            <p>Ingredients: {ingredientOutput}</p>\n            <p>Price: <strong>USD {props.price.toFixed(2)}</strong></p>\n        </div>\n    )\n}\n\nexport default Order","import React, { Component } from 'react'\nimport axios from '../../axios_orders'\nimport { connect } from 'react-redux'\nimport Order from '../../components/Order/Order'\nimport withErrorHandling from '../../containers/withErrorHandling/withErrorHandling'\nimport * as actions from '../../store/actions'\nimport Spinner from '../../components/UI/Spinner/Spinner'\n\nclass Orders extends Component {\n\n\n    componentDidMount() {\n        this.props.onFetchOrders()\n    }\n\n    render() {\n        let orders = <Spinner />\n        if (!this.props.loading) {\n            orders = this.props.orders.map(order => (\n                <Order\n                    key={order.id}\n                    ingredients={order.ingredients}\n                    price={+order.price}\n                />\n            ))\n        }\n        return (\n            <div>\n                {orders}\n            </div>\n        )\n\n\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        orders: state.order.orders,\n        loading: state.order.loading\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onFetchOrders: () => dispatch(actions.fetchOrders())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandling(Orders, axios))","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom'\nimport Layout from './components/Layout/Layout'\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport Checkout from './containers/Checkout/Checkout'\nimport Orders from './containers/Orders/Orders'\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Layout>\n          <Switch>\n            <Route path='/checkout' component={Checkout} />\n            <Route path='/orders' component={Orders} />\n            <Route exact path='/' component={BurgerBuilder} />\n            <Route exact path='/burger_builder' component={BurgerBuilder} />\n          </Switch>\n        </Layout>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes'\n\nconst INITIAL_STATE = {\n    ingredients: null,\n    totalPrice: 4,\n    error: false\n}\n\nconst INGREDIENT_PRICES = {\n    salad: 0.5,\n    cheese: 0.4,\n    meat: 1.3,\n    bacon: 0.7\n}\n\nconst reducer = (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case actionTypes.ADD_INGREDIENT:\n            return {\n                ...state, \n                ingredients: {\n                    ...state.ingredients,\n                    [action.ingredientName]: state.ingredients[action.ingredientName] + 1\n                },\n                totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\n            }\n        case actionTypes.REMOVE_INGREDIENT:\n                return {\n                    ...state, \n                    ingredients: {\n                        ...state.ingredients,\n                        [action.ingredientName]: state.ingredients[action.ingredientName] - 1\n                    },\n                    totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName]\n                }\n        case actionTypes.SET_INGREDIENTS:\n            return {\n                ...state,\n                ingredients: { // do it this way if you want to keep the salad on top. you could always just put ingedients: action.ingredients but the salad will be at the bottom due to firebase alpha order\n                    salad: action.ingredients.salad,\n                    bacon: action.ingredients.bacon,\n                    cheese: action.ingredients.cheese,\n                    meat: action.ingredients.meat\n                },\n                totalPrice: 4,\n                error: false\n            }\n        case actionTypes.FETCH_INGREDIENTS_FAILED:\n            return {\n                ...state,\n                error: true\n            }\n        default:\n            return state\n    }\n}\n\nexport default reducer;","import * as actionTypes from '../actions/actionTypes'\n\nconst INITIAL_STATE = {\n    orders: [],\n    loading: false,\n    purchased: false\n}\n\nconst reducer = (state = INITIAL_STATE, action) => {\n    switch(action.type) {\n        case actionTypes.PURCHASE_INIT:\n            return {\n                ...state,\n                purchased: false\n            }\n\n        case actionTypes.PURCHASE_BURGER_START:\n            return {\n                ...state,\n                loading: true\n            }\n        case actionTypes.PURCHASE_BURGER_SUCCESS:\n            const newOrder = {\n                ...action.orderData,\n                id: action.orderId\n            }\n            return {\n                ...state,\n                loading: false,\n                purchased: true,\n                orders: state.orders.concat(newOrder)\n            }\n        case actionTypes.PURCAHSE_BURGER_FAIL:\n            return {\n                ...state,\n                loading: false,\n            }\n        case actionTypes.FETCH_ORDERS_START:\n            return {\n                ...state,\n                loading: true\n            }\n        case actionTypes.FETCH_ORDERS_SUCCESS:\n            return {\n                ...state,\n                orders: action.orders,\n                loading: false\n            }\n        case actionTypes.FETCH_ORDERS_FAIL:\n            return {\n                ...state,\n                loading: false\n            }\n        \n\n        default: \n            return state\n    }\n}\n\nexport default reducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux'\nimport thunk from 'redux-thunk'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport burgerBuilderReducer from './store/reducers/burgerBuilder'\nimport orderReducer from './store/reducers/order'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n    burgerBuilder: burgerBuilderReducer,\n    order: orderReducer\n})\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}